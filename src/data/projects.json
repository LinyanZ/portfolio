{
  "en": [
    {
      "id": "sc",
      "title": "Survey Creator",
      "summary": "A website that helps you to create and publish custom surveys. Use \"admin\" for both username and password to log in as an administrator, create your own surveys and view the submission data.",
      "videoUrl": "./videos/surveyCreator.mp4",
      "youtubeUrl": "CQZ9yFDFZSE",
      "tags": [
        "React.js",
        "Node.js",
        "Express",
        "MongoDB",
        "Json-Web-Token",
        "Docker",
        "AWS"
      ],
      "githubLink": "https://github.com/LinyanZ/surveyCreator",
      "details": [
        {
          "title": "About This Project",
          "content": [
            "A full-stack side project that features flexible UI editor, drag-n-drop reordering, and authentication/authorization."
          ]
        },
        {
          "title": "The Editor",
          "content": [
            "You can add/remove questions easily on the editor page, and simply drag them around to reorder the questions.",
            "For each question, there is a preview section alongside its property editor to provide you with some visual feedback as you're creating your surveys. The property editor would be different for different types of survey questions.",
            "Currently, the website supports 5 types of questions (short answer, multiple choice, multiple answer, drop-down list, and rating) but can be easily extended in the future."
          ]
        },
        {
          "title": "Authentication and Authorization",
          "content": [
            "This website is open for registration, although there is no difference between a guest visitor and a registered user at the moment. However, only an administrator can create surveys and view all the submissions made by others. Relevant routes are protected and the users would be redirected if they are not authenticated.",
            "The authentication and authorization are achieved using JWT tokens, which are stored in httpOnly cookies to prevent potential attacks."
          ]
        }
      ]
    },
    {
      "id": "tps",
      "title": "Third Person Shooter",
      "summary": "A third person shooter game made using Unity and Blender. The above video contains all the \"good\" parts of this game. You can find the full walk-through here: https://youtu.be/IdROkSJjZoo",
      "videoUrl": "./videos/thirdPersonShooterGame.mp4",
      "youtubeUrl": "73mukJxvZWE",
      "githubLink": "https://github.com/LinyanZ/thirdPersonShooter",
      "tags": ["Unity", "C#", "Blender", "Shader"],
      "details": [
        {
          "title": "About This Project",
          "content": [
            "A university project that achieved nearly full marks on the gameplay and graphics aspects.",
            "This was a group project. Most of the game logics including camera, movements, weapon system, health system, AI, shaders and particles are written by myself. No third-party libraries are used in this project.",
            "The actual code for this project is hidden on purpose as this is one of my university assignments. The report, however, is made public through the link above to showcase my understanding. Only the relevant parts (my parts) are kept in the report. It explains this project in great details."
          ]
        }
      ]
    },
    {
      "id": "bgai",
      "title": "Board Game AI",
      "summary": "An AI agent that plays the board game Yinsh which is able to beat experienced human players.",
      "tags": ["Python", "Minimax"],
      "imageUrl": "./images/yinsh.png",
      "details": [
        {
          "title": "About This Project",
          "content": [
            "A university project. It won the third place out of 90 teams in the subject's final tournament.",
            "The AI agent is driven by the Minimax algorithm. We also built some variants that use A* algorithm and Reinforcement Learning, but overall the Minimax variant outperforms all other agents in our tests.",
            "The actual code for this project is hidden on purpose as this is one of my university assignments."
          ]
        },
        {
          "title": "The Minimax Algorithm",
          "content": [
            "Yinsh is a turn-based board game involving two players that falls under the category of zero-sum games. Minimax is a very strong strategy in this category as it always picks the action that minimizes the opponent's rewards.",
            "The full Minimax algorithm would expand the search path all the way to the terminal states (e.g., win, lose, or tie). However, as the dimensions of Yinsh are huge, it's not feasible to do so. Instead, we limited the search depth to only 2, that is to expand one action for ourselves and then one action for our opponent, to make the computation time fall within a reasonable range. We also implemented alpha-beta pruning and tried to expand more promising child nodes first to further decrease the elapsed time.",
            "At each turn, the board configuration is fed into a heuristic function that returns a score to represent the chances of winning. A handful of features are selected (e.g., the number of rings won, whether there is a sequence in the state, how far the rings are from the center of the board, how many rings are blocked, and so on) inside the heuristic function."
          ]
        }
      ]
    },
    {
      "id": "dv",
      "title": "Data Visualizer",
      "summary": "A website that displays regional information for Melbourne. A Map-Reduce processing is used to group the data into different statistical area levels.",
      "videoUrl": "./videos/dataVisualizer.mp4",
      "youtubeUrl": "iRAcW1rMhYU",
      "githubLink": "https://github.com/LinyanZ/dataVisualizer",
      "tags": [
        "React.js",
        "Node.js",
        "Express",
        "MongoDB",
        "Map-Reduce",
        "Docker",
        "AWS"
      ],
      "details": [
        {
          "title": "About This Project",
          "content": [
            "A side project that showcases the Map-Reduce concept. MongoDB is used in this project as its aggregation pipeline provides powerful Map-Reduce-alike features."
          ]
        },
        {
          "title": "The Map-Reduce Process",
          "content": [
            "Each document in the database contains an arbitrary value and an SA (statistical area) code which represents its geolocation, such as \"209041430\". An SA2 (SA level 2) code comprises 9 digits (\"209041430\"), denotes a finer-grained area. A legitimate SA3 code (\"20904\") can be created using the first five digits of any SA2 code, which covers a broader area on the map. A legitimate SA4 code (\"209\") can be created using the first three digits of any SA2 code, which covers an even wider area.",
            "During the Map process, each document emits all three levels of its SA code (\"209041430\" => \"209041430\", \"20904\", \"209\"), then during the Reduce process, all documents are grouped by a certain SA level according to a given query.",
            "The \"Min\", \"Max\", \"Sum\", \"Average\", and \"Count\" is calculated during the Reduce process."
          ]
        }
      ]
    },
    {
      "id": "ft",
      "title": "Footprint Tracker",
      "summary": "An android application that tracks the user's GPS location and draw the users' routes on a Google Map.",
      "videoUrl": "./videos/footprintTracker.mp4",
      "youtubeUrl": "vvfTlTezr_s",
      "tags": ["Java", "Android", "Firebase"],
      "details": [
        {
          "title": "About This Project",
          "content": [
            "A university project developed using vanilla Java.",
            "This was a group project. The complete project is a social platform that allows users to share their travel experiences (similar to Instagram to an extent). The application allows users to publish posts, create travel plans and share it with others. My portion in this project is to track a user's travel footprints, save the routes and upload it onto Firebase.",
            "The actual code for this project is hidden on purpose as this is one of my university assignments."
          ]
        }
      ]
    }
  ],
  "zh": [
    {
      "id": "sc",
      "title": "问卷编辑器",
      "summary": "一个帮助你创建并发布调查问卷的网站。用 \"admin\" 作为用户名和密码登录以创建你自己的问卷并查看所有提交结果。",
      "videoUrl": "./videos/surveyCreator.mp4",
      "youtubeUrl": "CQZ9yFDFZSE",
      "tags": [
        "React.js",
        "Node.js",
        "Express",
        "MongoDB",
        "Json-Web-Token",
        "Docker",
        "AWS"
      ],
      "githubLink": "https://github.com/LinyanZ/surveyCreator",
      "details": [
        {
          "title": "项目简介",
          "content": [
            "一个全栈的业余项目，提供了灵活的UI编辑器、拖拽排序、身份认证/授权等功能。"
          ]
        },
        {
          "title": "编辑器",
          "content": [
            "您可以轻松的添加或删除问卷问题，并通过拖拽的方式对其进行排序。",
            "每一个问题都会有一个预览以及属性面板，让您能实时的观察您的调查问卷。每个问题的属性面板会根据问题的类型显示相应的选项。",
            "目前编辑器支持5种不同的问题类型（简述，单选，多选，下拉列表以及评分）。如果需要，可以轻松的在将来添加更多的问题类型。"
          ]
        },
        {
          "title": "身份验证与授权",
          "content": [
            "本网站开放注册，尽管目前访客与注册用户之间并没有任何区别（两者都能浏览并提交所有的问卷）。但是，只有网站管理者可以创建新的问卷并查看所有的提交数据。相关的页面已被保护所以未授权的用户会被重定向回首页。",
            "身份的验证与授权是通过JWT令牌实现的。为确保网站不会受到 XSS 攻击，本网站使用了 httpOnly 的 cookies 来储存令牌。"
          ]
        }
      ]
    },
    {
      "id": "tps",
      "title": "第三人称射击游戏",
      "summary": "一个用 Unity 以及 Blender 制作的第三人称射击游戏。上面的视频包括了所有“精彩”的部分。您可以在这里观看完整的游戏流程：https://youtu.be/IdROkSJjZoo",
      "videoUrl": "./videos/thirdPersonShooterGame.mp4",
      "youtubeUrl": "73mukJxvZWE",
      "githubLink": "https://github.com/LinyanZ/thirdPersonShooter",
      "tags": ["Unity", "C#", "Blender", "Shader"],
      "details": [
        {
          "title": "项目简介",
          "content": [
            "这是我大学中的一个项目，在游戏玩法以及画面的层面上取得了近乎满分。",
            "这是一个小组项目。绝大多数游戏的逻辑（包括摄像机、人物移动、武器系统、健康系统、AI、着色器以及粒子效果）都由我自己完成。本项目没有使用任何的第三方库。",
            "由于这是一个大学的作业，我有意隐藏了游戏的源码。但我公开了（我负责的部分的）项目报告以展示我对游戏开发的理解，您可以通过上面的 Github 链接浏览此报告。它非常详细的解释了本项目中有意思的部分。"
          ]
        }
      ]
    },
    {
      "id": "bgai",
      "title": "棋盘游戏 AI",
      "summary": "一个会下套圈棋（Yinsh）的 AI ，能够打败很有经验的人类玩家。",
      "tags": ["Python", "Minimax"],
      "imageUrl": "./images/yinsh.png",
      "details": [
        {
          "title": "项目简介",
          "content": [
            "一个大学中的项目。在学科竞赛中取得了第三名的成绩（总共90组选手）。",
            "这个 AI 是由 Minimax 算法驱动的。我们还编写了其他几个由 A* 或强化学习算法驱动的 AI ，但在我们的测试中 Minimax 算法打败了其他的候选AI。",
            "由于这是一个大学的作业，我有意隐藏了程序的源码。"
          ]
        },
        {
          "title": "Minimax 算法",
          "content": [
            "圈套棋是一个回合制的双人游戏，并且归于零和游戏。Minimax 是此类游戏中一个非常强劲的策略，因为它总是会选择能最小化对手奖励的行为。",
            "完整的 Minimax 算法会将搜索路径一直扩展到最终状态（例如，赢、输或平局）。但是，圈套棋的维度很大，我们无法在有限的时间检查所有种可能。所以，我们将搜索深度限制为2层（即为自己延申一个动作，再为对手延申一个动作，以使计算时间落在合理的范围内。我们还实施了 alpha-beta 剪枝，并尝试首先扩展更有希望的子节点，以进一步减少运行时间。",
            "在每一回合中，棋盘当前的状态会被输入给一个启发式函数，该函数会返回一个打分来表示获胜的机会。这个启发式函数会选择了一些特征（例如，已经赢得圆环的数量、棋盘中是否有棋子组成的序列、圆环离棋盘中心有多远、有多少圆环被挡住等）来判断局势的优劣。"
          ]
        }
      ]
    },
    {
      "id": "dv",
      "title": "数据可视化工具",
      "summary": "一个显示墨尔本区域数据的网站。通过 Map-Reduce 的处理将原始数据分组到了不同的统计区域级别。",
      "videoUrl": "./videos/dataVisualizer.mp4",
      "youtubeUrl": "iRAcW1rMhYU",
      "githubLink": "https://github.com/LinyanZ/dataVisualizer",
      "tags": [
        "React.js",
        "Node.js",
        "Express",
        "MongoDB",
        "Map-Reduce",
        "Docker",
        "AWS"
      ],
      "details": [
        {
          "title": "项目简介",
          "content": [
            "一个展示映射化简（Map-Reduce）概念的业余项目。本项目使用 MongoDB，因为它的 Aggregation Pipeline 提供了强大的、类似 Map-Reduce 的功能。"
          ]
        },
        {
          "title": "映射化简（Map-Reduce）",
          "content": [
            "数据库中的每个文档都包含一个随机生成的值和一个代表其地理位置的 SA（统计区域）代码，例如“209041430”。一个 SA2（第二级统计区域）代码由9位数字组成（\"209041430\"），表示一个较小范围的区域。一个有效的 SA3 代码 (\"20904\") 可以使用任何 SA2 代码的前五位数字创建，它覆盖了地图上一个更广阔的区域。一个有效的 SA4 码（\"209\"）可以用任意 SA2 码的前三位数字组成，覆盖区域会更广。",
            "在 Map 过程中，每个文档会映射其所有三个级别的 SA 代码（\"209041430\" => \"209041430\", \"20904\", \"209\"），然后在 Reduce 过程中，所有文档会根据查询语句按特定的 SA 级别分组。",
            "一个区域的最小值、最大值、总和、均值以及数据数量会在 Reduce 的过程中被计算出来。"
          ]
        }
      ]
    },
    {
      "id": "ft",
      "title": "足迹追踪应用",
      "summary": "一个追踪用户 GPS 位置并在 Google Map 地图上绘制用户路线的 Android 应用。",
      "videoUrl": "./videos/footprintTracker.mp4",
      "youtubeUrl": "vvfTlTezr_s",
      "tags": ["Java", "Android", "Firebase"],
      "details": [
        {
          "title": "项目简介",
          "content": [
            "一个大学中的项目。由原生 Java 开发。",
            "这是一个小组项目。完整的项目是一个社交平台，允许用户分享他们的旅行体验（在某种程度上类似于 Instagram）。该应用程序允许用户发布帖子、制定旅行计划并与他人分享。我在这个项目中的部分是检测用户的旅行足迹，保存路线并将其上传到 Firebase。",
            "由于这是一个大学的作业，我有意隐藏了程序的源码。"
          ]
        }
      ]
    }
  ]
}
