/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import gsap from "gsap";
import { Mask, useGLTF } from "@react-three/drei";

export function GamingPC() {
  const { nodes } = useGLTF("/models/gaming_pc.glb");
  const ref = useRef();

  useEffect(() => {
    gsap.to(ref.current.rotation, { x: 0, y: -Math.PI / 2, duration: 1 });
  });

  return (
    <group
      ref={ref}
      scale={[1, 1, 1]}
      rotation={[-Math.PI / 12, -Math.PI / 2 + 0.4, 0]}
      position={[1.04, -2, 0]}
    >
      <Mask
        id={1}
        position={[-1.39, 2.96, 2.79]}
        rotation={[-2.72, 1.4, 2.73]}
        scale={[3.25, 1.84, 0.04]}
      >
        <bufferGeometry {...nodes.Monitor.geometry} />
      </Mask>
      <Mask id={1} position={[-2.93, 2, -3]} scale={[1.73, 1.57, 0.9]}>
        <bufferGeometry {...nodes.PC.geometry} />
      </Mask>
      <Mask
        id={1}
        position={[1.7, 0.32, -1.7]}
        rotation={[Math.PI, -0.26, Math.PI]}
        scale={[-0.43, -0.23, -0.43]}
      >
        <bufferGeometry {...nodes.Mouse.geometry} />
      </Mask>
      <Mask
        id={1}
        position={[2.01, 0.35, 1.71]}
        rotation={[-1.55, 0.09, 1.39]}
        scale={0.91}
      >
        <bufferGeometry {...nodes.Keyboard.geometry} />
      </Mask>
    </group>
  );
}

export default GamingPC;

useGLTF.preload("/models/gaming_pc.glb");
