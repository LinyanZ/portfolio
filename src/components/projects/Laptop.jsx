/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import gsap from "gsap";
import { Mask, useGLTF } from "@react-three/drei";

export function Laptop() {
  const { nodes: laptop } = useGLTF("/models/laptop.glb");
  const { nodes: plant } = useGLTF("/models/plant.glb");
  const ref = useRef();

  useEffect(() => {
    gsap.to(ref.current.rotation, {
      x: 0,
      y: -0.1,
      duration: 1,
    });
    gsap.to(ref.current.children[2].position, {
      y: 0,
      duration: 0.8,
      delay: 0.2,
    });
    gsap.to(ref.current.children[2].rotation, {
      x: -Math.PI / 2,
      duration: 0.8,
      delay: 0.2,
    });
  });

  return (
    <group
      ref={ref}
      position={[0, -1.5, -1]}
      scale={[2, 2, 2]}
      rotation={[0.2, -0.1 - 0.8, 0]}
    >
      <Mask
        id={1}
        geometry={laptop.bezel.geometry}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <bufferGeometry {...laptop.bezel.geometry} />
      </Mask>
      <Mask
        id={1}
        geometry={laptop.base.geometry}
        rotation={[-Math.PI / 2, 0, 0]}
      >
        <bufferGeometry {...laptop.base.geometry} />
      </Mask>
      <Mask
        id={1}
        geometry={laptop.screen.geometry}
        position={[0, -1.2, 0]}
        rotation={[-Math.PI / 2 + 1.2, 0, 0]}
      >
        <bufferGeometry {...laptop.screen.geometry} />
      </Mask>
      <group position={[-2.6, 0, -0.8]} scale={[3, 3, 3]}>
        <Mask id={1}>
          <bufferGeometry {...plant.part2.geometry} />
        </Mask>
        <Mask id={1}>
          <bufferGeometry {...plant.part1.geometry} />
        </Mask>
      </group>
    </group>
  );
}

useGLTF.preload("/models/laptop.glb");
useGLTF.preload("/models/plant.glb");

export default Laptop;
